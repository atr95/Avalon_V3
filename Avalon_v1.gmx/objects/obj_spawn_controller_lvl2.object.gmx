<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Level 2 spawn system. 
global.enemies = 0;
global.encounter_number = 0;
//gives the player a few seconds before it starts
alarm[0]=room_speed*3;
start=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//spawn medkits
scr_medkit()
alarm[9] = room_speed * 35;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Stop spawning sideways lancers
alarm[5] = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// spawn lots of sideways lancers
alarm[5] = room_speed / 2;
scr_lancer_sideways_1();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Spawn lancer pentad. 
alarm[4] = room_speed * 5;
scr_lancer_pentad();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Grunt pyramid spawner
alarm[3] = room_speed * 12;
scr_grunt_running_pyramid();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Victory timer!

room_goto_next();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Alarm one: Spawn one lancer every few seconds.
if (global.encounter_number &lt; 12)
{
    alarm[1] = room_speed * 5;
    scr_lancer_single();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>start=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Case statement to create the enemy encounters.
// enemies and encounter_number
if(start==true) //start becomes true after 5 seconds pass. 
{
if(global.enemies &lt; 1)
{
    switch (global.encounter_number)
    {
       
        case (0):
            alarm[9] = room_speed * 15;
            scr_grunt_running_diaganal_5();
            scr_grunt_running_diaganal_5();
            scr_grunt_trackers_4();
            global.encounter_number += 1;
            break;
       
       case (1):
        alarm[1] = 5; // Start the lancer runs.
            scr_grunt_mobile_line();
            global.encounter_number += 1;
            break;
        
        case (2):
            scr_grunt_running_diaganal_5();
            scr_grunt_trackers_2();
            global.encounter_number += 1;
            break;
        
        case (3):
            alarm[3] = 5; //start grunt pyramid runs.
             alarm[1] = 0; // stop lancers from spawning.
            scr_lancer_sideways_1();
            global.encounter_number += 1;
            break;
        
        case (4):
            scr_lancer_sideways_1();
            scr_lancer_pair();
            global.encounter_number += 1;
            break;
        
        case (5):
            scr_grunt_running_diaganal_5();
            alarm[3] = 0; // stop grunt pyramids from spawning.
            scr_grunt_trackers_4();
            scr_grunt_mobile_line();
            global.encounter_number += 1;
            break;
        
        case (6):
        alarm[4] = 1; //Start the lancer runs down the middle
            scr_grunt_mobile_line();
            scr_grunt_trackers_2();
            global.encounter_number += 1;
            break;
            
        case (7): // Dreadnaught with lancer 
        alarm[4] = 0; // stop the pentad hell.
        scr_dread_1();
        scr_lancer_sideways_1();
            global.encounter_number += 1;
            break;
            
        case (8):
        alarm[1] = 1;// start lancers
        alarm[3] = 1;// start grunts
        scr_grunt_trackers_4()
        scr_lancer_sideways_1();
        scr_medkit();
            global.encounter_number += 1;
            break;
            
        case (9):
        alarm[1] = 0;
        alarm[3] = 0;
            alarm[5] = 1;
            alarm[6] = room_speed * 2;
            global.encounter_number += 1;
            break;
            
        // Another Dreadnaught miniboss
        case (10):
            scr_medkit();
            alarm[1] = 0;
            alarm[3] = 1;
            scr_dread_1();
            global.encounter_number += 1;
            break;
            
        case (11): // Real Boss
        alarm[3] = 0;
        scr_grunt_4_back();
            global.encounter_number += 1;
            break;
            
        case (12):  // Victory
            // Victory transition
            global.encounter_number += 1;
            alarm[2] = room_speed * 3;
            break;
    }
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
