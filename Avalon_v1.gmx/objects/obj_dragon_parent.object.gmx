<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_dreadnought_base</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_dread_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[3] = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Bullet barrage. 
alarm[3] = room_speed / 4;
var i =0;
for (i = 0; i &lt; 6; i++)
{
    instance_create(x - 32 + (i * 12), y, obj_dread_bullet);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[1] = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Repeated homing bullets.
alarm[1] = room_speed / 15;
    instance_create(x, y, obj_bullet_dragonfire);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(obj_player_parent.start!=false &amp;&amp; obj_player_parent.died!=true)
{
   var attack = irandom_range(1, 4); // Roll for attack
   
   switch (attack)
   {    // Bullet shotgun
        case (1):
            var i = 0;
            for (i = 0; i &lt; 6; i++)
            {
                instance_create(x - 32 + (i * 12), y, obj_dread_bullet);
            }
            
            for (i = 0; i &lt; 6; i++)
            {
                with(instance_create(x - 32 + (i * 12), y, obj_dread_bullet))
                {
                    direction = point_direction(x, y, x + 2, y + 5);
                }
            }
            
            for (i = 0; i &lt; 6; i++)
            {
                with(instance_create(x - 32 + (i * 12), y, obj_dread_bullet))
                {
                    direction = point_direction(x, y, x - 2, y + 5);
                }
            }
            break;
            
            //Bullet Shotgun at player
        case (2):
            var i = 0;
            for (i = 0; i &lt; 6; i++)
            {
                instance_create(x - 32 + (i * 12), y, obj_dread_bullet);
            }
            
            for (i = 0; i &lt; 6; i++)
            {
                with(instance_create(x - 32 + (i * 12), y, obj_dread_bullet))
                {
                    direction = point_direction(x, y, x + 2, y + 5);
                }
            }
            
            for (i = 0; i &lt; 6; i++)
            {
                with(instance_create(x - 32 + (i * 12), y, obj_dread_bullet))
                {
                    direction = point_direction(x, y, x - 2, y + 5);
                }
            }
            break;
        // Homing bullets
        case (3):
            alarm[1] = room_speed / 2;
            alarm[2] = room_speed * 2;
            break;
            // Repeated Barrage
        case (4):
            alarm[3] = 1;
            alarm[4] = room_speed;
            break;
   }
}
alarm[0] = room_speed * 1.5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
