<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_dragon_head</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>enemy_health = 3000
move_1 = true;
move_2=false;
move_3=false;
move_4=false;
starting_y = y;
starting_x = x;
alarm[0] = room_speed * 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// move back up.
move_2 = true;
move_4 = false;
alarm[1] = 0;
alarm[0] = room_speed * 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[3] = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Bullet barrage. 
alarm[3] = room_speed / 5;
var i =0;
for (i = 0; i &lt; 10; i++)
{
    instance_create(x - 80 + (i * 16), y, obj_dragon_bullet);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[1] = 0;
move_2 = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Repeated homing bullets.
alarm[1] = room_speed / 10;
instance_create(x, y, obj_bullet_dragonfire);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(obj_player_parent.start!=false &amp;&amp; obj_player_parent.died!=true)
{
   var attack = irandom_range(1, 4); // Roll for attack
   
   switch (attack)
   {    // Bullet shotgun
        case (1):
            var i = 0;
            for (i = 0; i &lt; 8; i++)
            {
                instance_create(x - 48 + (i * 12), y, obj_dragon_bullet);
            }
            
            for (i = 0; i &lt; 8; i++)
            {
                with(instance_create(x - 32 + (i * 12), y, obj_dragon_bullet))
                {
                    direction = point_direction(x, y, x + 2, y + 5);
                }
            }
            
            for (i = 0; i &lt; 8; i++)
            {
                with(instance_create(x - 32 + (i * 12), y, obj_dragon_bullet))
                {
                    direction = point_direction(x, y, x - 2, y + 5);
                }
            }
            break;
            
            //go to center and breathe fire.
        case (2):
            move_2 = false;
            move_3 = false;
            move_4 = true;
            alarm[0] = 0;
            break;
        // Homing bullets
        case (3):
        move_1 = false;
        move_2 = false;
        move_3 = false;
            alarm[1] = room_speed / 4;
            alarm[2] = room_speed * 1.5;
            break;
            // Repeated Barrage
        case (4):
            alarm[3] = 1;
            alarm[4] = room_speed;
            break;
   }
}
alarm[0] = room_speed * 1.5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.pause==0)
{
target_dir=point_direction(obj_player_parent.x,obj_player_parent.y,x,y);
image_angle=target_dir-90;
if(move_1==true)
{
    //moves forward slowly 96 pixels
    y+=2;
    if(starting_y+256==y)
    {
    
        move_1=false;
        move_2=true;
        move_3 = false;
        move_4 = false;
    }
}
else if(move_2==true)
{
    //then it moves right 128 pixels
    x+=4
    if(starting_x+128&lt;=x)
    {
    move_2=false;
    move_3=true;
    }
}
else if(move_3==true)
{
    //then left 128 pixels.
    //then right again 128 pixels.
    //it repeats right left right left
    x-=4
    if(starting_x-128&gt;=x)
    {
    move_3=false;
    move_2=true;
    }
}
else if(move_4==true)
{
alarm[0] = 0;
    //center yourself. oohhhhmmmmm
    if (x &gt; 352) x -= 2;
    if (x &lt; 352) x += 2;
    if(352 == x)
    {
        alarm[1] = room_speed / 2;
        alarm[5] = room_speed * 3;
        move_4 = false;
    }
}

}
else
{
if(alarm[0]&gt;0)
    {
        alarm[0]++;
    }
    if(alarm[1]&gt;0)
    {
        alarm[1]++;
    }
    if(alarm[2]&gt;0)
    {
        alarm[2]++;
    }
    if(alarm[3]&gt;0)
    {
        alarm[3]++;
    }
    if(alarm[4]&gt;0)
    {
        alarm[4]++;
    }
    if(alarm[5]&gt;0)
    {
        alarm[4]++;
    }
}

//ALL ENEMIES NEED THIS CODE IN THEIR STEP EVENTS
//OR ELSE YOU CAN'T KILL THEM
if(enemy_health&lt;=0)
{
instance_destroy();
}

if(y&gt;room_height)
{
instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
